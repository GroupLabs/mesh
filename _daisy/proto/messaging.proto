syntax = "proto3";

package messaging;

// The service definition for the Messenger service.
service Messenger {
    // Sends a message to the server and receives a response.
    rpc SendMessage(MessageRequest) returns (MessageResponse);

    // Checks if the server is alive.
    rpc Heartbeat(HeartbeatRequest) returns (HeartbeatResponse);

    // Updates the network topology in the server.
    rpc UpdateTopology(TopologyUpdateRequest) returns (TopologyUpdateResponse);
}

// The message request for sending a message.
message MessageRequest {
    string message = 1;
}

// The message response that returns the server's reply.
message MessageResponse {
    string reply = 1;
}

// The heartbeat request for checking the server's status.
message HeartbeatRequest {
    // No fields are necessary for a heartbeat request.
}

// The heartbeat response to confirm the server's status.
message HeartbeatResponse {
    bool success = 1;  // True if the server is alive.
}

// The request to update the network topology.
message TopologyUpdateRequest {
    string topology = 1;  // Contains the topology information.
}

// The response after updating the network topology.
message TopologyUpdateResponse {
    bool success = 1;  // True if the topology update was successful.
}